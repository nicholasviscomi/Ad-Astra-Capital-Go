OpenInsider Neural Network Design

***
PREREQUISITE QUESTIONS

? After how many days of stagnation (defined as movement within ±2%) should the trade be exited, if at all
? When there is a catalyst, where should the stop-loss be placed to guard against sudden price drop offs

***

GOAL: Given the details of a transaction from an insider, predict whether the stock is likely to be profitable

#### SIMPLE NN ####
INPUTS:
[x] n shares bought
[x] price per share (should likely act as an alternative to firm size)
[x] % change in ownership
[x] insider title (CEO, CFO, 10%, etc.)
    --> map each title to a number
[x] passivity of the trade (whether prior stock returns are down or or up)
[x] cluster buying (number of insiders buying around the same time)
    NOTE: should only be a positive indicator: its presence is good; its absence has no meaning
[x] days between filing and trading
[x] insider track record
    [x] average trade result @ 30, 60, 90 days
    [x] number of wins
    [x] average win
    [x] number of losses
    [x] average loss

OUTPUTS:

Profit Ranges:
    - one node for stagnation (±1%) and then a node for each quartile of the profit distribution 
    - node for outliers in each direction
    (see analysis.ipynb for exact values)

- could also try hacing 3 outputs: >2% profit, 0-2%, <0%

POTENTIAL SOURCES OF ERROR:
- cluster buying acting as a negative indicator
- defining cluster buying by the difference between trade date
    ? If filing date is way after, it might screw everything up
- defining cluster buying as trades from the same company within 30 days 
    ? too small, too big, who knows
- choosing average of the 30, 60, 90 day returns. Maybe just try each one by itself 
- might be looking at insiders future trades when looking through i_dict[name]


MODEL STRUCTURES:

NOTES:
    -relu doesn't work on the unmodified inputs because the numbers stay too big
    -relu and tanh are equivalent on normalized data

Data Schema:----------------------------------------------------
    - Number of shares bought
    - Price per share
    - Percent change in ownership
    - Insider position (Director, President, etc.)
    - Previous 30 day returns
    - Cluster score
    - Days between filing and trading
    - Average profit of insider's previous transactions
First:
    - 8 inputs with returns(90) used
    - output layer is Dense, no activation
    - ~45% accuracy
Second:
    - same with little higher accuracy
Third:
    - same but with softmax activation on last layer
    - ~55% accuracy
    
    MeanSquaredLogarithmicError

NormData:
    - (8, 150, 100, 7)
    - tanh for hidden, softmax for output
    - normalized data (via Normalizer().fit_transform())

(Norm-)150tanh-10relu-3(-7):
    - all have 3 outputs, for profit, stagnation (±1%), and loss
    ~50% accuracy across the board

---------------------------------------------------------------